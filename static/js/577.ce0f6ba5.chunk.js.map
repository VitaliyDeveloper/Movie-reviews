{"version":3,"file":"static/js/577.ce0f6ba5.chunk.js","mappings":"6OAGaA,EAAiBC,EAAAA,GAAAA,GAAH,iLAUdC,EAAkBD,EAAAA,GAAAA,GAAH,sbAqBfE,EAAcF,EAAAA,GAAAA,IAAH,+CAIXG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,iK,mBC3BhBK,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,iCACE,SAACR,EAAD,UACGO,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,OAApB,OACV,SAACd,EAAD,WACE,UAACE,EAAD,CAAWa,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMX,GAA/C,WACE,SAACL,EAAD,CACEiB,IACEJ,EAAM,0CACiCA,GACnCK,EAENC,IAAKR,GAAgBC,EACrBQ,OAAO,QAERT,GAAgBC,MAXCF,EADZ,OAiBd,SAAC,KAAD,MAGL,EAEDP,EAAUkB,UAAY,CACpBjB,OAAQkB,IAAAA,QACNA,IAAAA,MAAgB,CACdZ,GAAIY,IAAAA,OACJX,MAAOW,IAAAA,OACPV,KAAMU,IAAAA,OACNT,OAAQS,IAAAA,UAEVC,YAGJ,O,qIChDaC,EAAkB1B,EAAAA,GAAAA,IAAH,kQAWf2B,EAAa3B,EAAAA,GAAAA,EAAH,4EAKV4B,EAAa5B,EAAAA,GAAAA,GAAH,2M,SCZV6B,EAAuB,WAClC,OACE,SAACH,EAAD,WACE,SAACC,EAAD,iDAGL,EAEYG,EAAoB,WAC/B,OACE,SAACJ,EAAD,WACE,SAACC,EAAD,gEAGL,EAEYI,EAAY,WACvB,OAAO,SAACH,EAAD,kCACR,C,qJCpBKI,EAAM,mCAGZ,aAAO,OAAP,oBAAO,uGACkBC,EAAAA,EAAAA,GAAM,mBAAoB,CAC/CC,OAAQ,CACNC,QAASH,EACTI,KAAM,MAJL,cACCC,EADD,OAOCC,EAAiBD,EAASE,KAP3B,kBAUED,GAVF,kEAFPL,EAAAA,EAAAA,SAAAA,QAAyB,+B,aCmCzB,EAlCiB,WACf,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOlC,EAAP,KAAemC,EAAf,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,YDFL,WAAP,gCCGIC,GAAsBC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACtBC,EAAY,GAElBD,EAAQlC,KACN,YAAiE,IACzDoC,EAAQ,CACZnC,GAF4D,EAA7DA,GAGCC,MAH4D,EAAzDA,MAIHC,KAJ4D,EAAlDA,KAKVC,OAL4D,EAA5CiC,YAMhBC,YAN4D,EAA/BC,aAO7BC,UAP4D,EAAjBC,YAU7C,OAAON,EAAUO,KAAKN,EACvB,IAGHN,EAAUK,EACX,GACF,GAAE,KAGD,iCACE,SAAC,KAAD,IACCxC,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,MAGnC,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Notifications/Notifications.styled.js","components/Notifications/Notifications.jsx","services/fetchTrending.js","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyle = styled.ul`\n  display: flex;\n  text-decoration: none;\n  align-items: start;\n  justify-content: center;\n  list-style: none;\n  flex-wrap: wrap;\n  height: 100%;\n`;\n\nexport const MovieItemsStyle = styled.li`\n  display: flex;\n  text-decoration: none;\n  justify-content: start;\n  align-items: center;\n  flex-direction: column;\n  margin: 10px;\n  padding: 5px;\n  /* border-radius: 5px; */\n  width: 150px;\n  min-height: 260px;\n  background-color: var(--first-color-dark);\n  transition: 200ms ease-in-out;\n\n  &:focus,\n  :hover {\n    transform: scale(1.1);\n    box-shadow: 0 0 15px var(--first-color-dark);\n  }\n`;\n\nexport const PosterStyle = styled.img`\n  margin-bottom: 5px;\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: var(--some-white-color);\n  text-decoration: none;\n  text-align: center;\n\n  &:hover {\n    color: var(--accent-color);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport {\n  MovieItemsStyle,\n  MovieListStyle,\n  LinkStyle,\n  PosterStyle,\n} from './MovieList.styled';\n\nimport noPoster from '../../img/no-poster.png';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <>\n      <MovieListStyle>\n        {movies.map(({ id, title, name, poster }) => (\n          <MovieItemsStyle key={id}>\n            <LinkStyle to={`/movies/${id}`} state={{ from: location }}>\n              <PosterStyle\n                src={\n                  poster\n                    ? `https://image.tmdb.org/t/p/w500/${poster}`\n                    : noPoster\n                }\n                alt={title ? title : name}\n                height=\"200\"\n              />\n              {title ? title : name}\n            </LinkStyle>\n          </MovieItemsStyle>\n        ))}\n      </MovieListStyle>\n      <Outlet />\n    </>\n  );\n};\n\nMovieList.prototype = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const NoticeContainer = styled.div`\n  background-color: rgba(255, 255, 255, 1);\n  color: var(--accent-color);\n  padding: 20px;\n  margin: 20px auto;\n  width: 600px;\n  text-align: center;\n  /* border: 3px solid var(--accent-color); */\n  /* border-radius: 20px; */\n`;\n\nexport const NoticeText = styled.p`\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const TitleStyle = styled.h2`\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 50px;\n  text-align: center;\n  color: var(--first-color-dark);\n  box-shadow: 0 0 20px var(--first-color-dark);\n`;\n","import {\n  NoticeContainer,\n  NoticeText,\n  TitleStyle,\n} from './Notifications.styled';\n\nexport const NotificationsReviews = () => {\n  return (\n    <NoticeContainer>\n      <NoticeText>This movie don't have any reviews</NoticeText>\n    </NoticeContainer>\n  );\n};\n\nexport const NotificationsCast = () => {\n  return (\n    <NoticeContainer>\n      <NoticeText>We did not find any information about the actors</NoticeText>\n    </NoticeContainer>\n  );\n};\n\nexport const TitleHome = () => {\n  return <TitleStyle>Popular movies today</TitleStyle>;\n};\n","// https://api.themoviedb.org/3/movie/550?api_key=d2e94e48e038eb54fbcf63f3b797b0c5\n\nimport axios from 'axios';\n\nconst KEY = 'd2e94e48e038eb54fbcf63f3b797b0c5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/all/day', {\n    params: {\n      api_key: KEY,\n      size: 20,\n    },\n  });\n  const trendingMovies = response.data;\n  // console.log(trendingMovies);\n\n  return trendingMovies;\n}\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport { TitleHome } from 'components/Notifications/Notifications';\nimport { fetchTrendingMovies } from 'services/fetchTrending';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(({ results }) => {\n      const moviesArr = [];\n\n      results.map(\n        ({ id, title, name, poster_path, vote_average, vote_count }) => {\n          const movie = {\n            id,\n            title: title,\n            name: name,\n            poster: poster_path,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n\n          return moviesArr.push(movie);\n        }\n      );\n\n      setMovies(moviesArr);\n    });\n  }, []);\n\n  return (\n    <>\n      <TitleHome />\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["MovieListStyle","styled","MovieItemsStyle","PosterStyle","LinkStyle","Link","MovieList","movies","location","useLocation","console","log","map","id","title","name","poster","to","state","from","src","noPoster","alt","height","prototype","PropTypes","isRequired","NoticeContainer","NoticeText","TitleStyle","NotificationsReviews","NotificationsCast","TitleHome","KEY","axios","params","api_key","size","response","trendingMovies","data","useState","setMovies","useEffect","fetchTrendingMovies","then","results","moviesArr","movie","poster_path","voteAverage","vote_average","voteCount","vote_count","push"],"sourceRoot":""}