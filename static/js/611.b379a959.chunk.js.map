{"version":3,"file":"static/js/611.b379a959.chunk.js","mappings":"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","sources":["components/Notifications/Notifications.styled.js","components/Notifications/Notifications.jsx","services/fetchMovieReviews.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","pages/ReviewsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const NoticeContainer = styled.div`\n  background-color: rgba(255, 255, 255, 1);\n  color: var(--accent-color);\n  padding: 20px;\n  margin: 20px auto;\n  width: 600px;\n  text-align: center;\n  /* border: 3px solid var(--accent-color); */\n  /* border-radius: 20px; */\n`;\n\nexport const NoticeText = styled.p`\n  text-transform: uppercase;\n  font-weight: bold;\n`;\n\nexport const TitleStyle = styled.h2`\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 50px;\n  text-align: center;\n  color: var(--first-color-dark);\n  box-shadow: 0 0 20px var(--first-color-dark);\n`;\n","import {\n  NoticeContainer,\n  NoticeText,\n  TitleStyle,\n} from './Notifications.styled';\n\nexport const NotificationsReviews = () => {\n  return (\n    <NoticeContainer>\n      <NoticeText>This movie don't have any reviews</NoticeText>\n    </NoticeContainer>\n  );\n};\n\nexport const NotificationsCast = () => {\n  return (\n    <NoticeContainer>\n      <NoticeText>We did not find any information about the actors</NoticeText>\n    </NoticeContainer>\n  );\n};\n\nexport const TitleHome = () => {\n  return <TitleStyle>Popular movies today</TitleStyle>;\n};\n","import axios from 'axios';\n\nconst KEY = 'd2e94e48e038eb54fbcf63f3b797b0c5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  const fetchMovieReviews = response.data;\n  // console.log(fetchMovieReviews);\n\n  return fetchMovieReviews;\n}\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  margin: 20px auto;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 300px;\n  width: 850px;\n  background-color: rgba(255, 255, 255, 1);\n  box-shadow: 0 0 15px var(--first-color-dark);\n\n  /* border: 3px solid var(--accent-color); */\n  /* border-radius: 20px; */\n`;\n\nexport const WindowS = styled.div`\n  margin: 10px;\n  height: 300px;\n  width: 100vh;\n  overflow: hidden;\n`;\n\nexport const AllPageContainer = styled.div`\n  height: 350px;\n  display: flex;\n  transition: translate;\n  transition-property: transform;\n  transition-duration: 300ms;\n  transition-timing-function: ease-in-out;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: no-wrap;\n  justify-content: start;\n  padding: 0 20px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  list-style: none;\n  align-items: center;\n  margin: 0 20px;\n  min-width: 800px;\n  max-width: 800px;\n`;\n\nexport const AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 10px;\n`;\n\nexport const Poster = styled.img`\n  min-height: 100px;\n  width: 100px;\n  border-radius: 50%;\n`;\n\nexport const TitleName = styled.h3`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  min-width: 650px;\n`;\n","import PropTypes from 'prop-types';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport { useState, useEffect, cloneElement } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  CastList,\n  CastItem,\n  Poster,\n  Text,\n  MainContainer,\n  WindowS,\n  AllPageContainer,\n  AvatarContainer,\n  TitleName,\n} from './Reviews.styled';\nimport noAvatar from '../../img/no-photo.jpg';\n\nconst Reviews = ({ reviews }) => {\n  const PAGE_WIDTH = 840;\n\n  const [pages, setPages] = useState([]);\n  const [offset, setOffset] = useState(0);\n\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    setPages(\n      reviews.map(review => {\n        return cloneElement(review);\n      })\n    );\n  }, [reviews]);\n\n  const handleLeftArrowClick = () => {\n    setOffset(currentOffset => {\n      const newOffset = currentOffset + PAGE_WIDTH;\n\n      return Math.min(newOffset, 0);\n    });\n  };\n  const handleRightArrowClick = () => {\n    setOffset(currentOffset => {\n      const newOffset = currentOffset - PAGE_WIDTH;\n      const maxOffset = -(PAGE_WIDTH * (pages.length - 1));\n      return Math.max(newOffset, maxOffset);\n    });\n  };\n\n  return (\n    <MainContainer>\n      <FaChevronLeft onClick={handleLeftArrowClick} />\n      <WindowS>\n        <AllPageContainer style={{ transform: `translate(${offset}px)` }}>\n          <CastList>\n            {reviews.map(({ id, author, text, details }) => {\n              // console.log(details);\n              const { avatar_path, username } = details;\n              console.log(avatar_path);\n              return (\n                <CastItem key={id}>\n                  <AvatarContainer>\n                    <Poster src={noAvatar} alt={username} width=\"50px\" />\n                    <TitleName>{author}</TitleName>\n                  </AvatarContainer>\n                  <Text>{text}</Text>\n                </CastItem>\n              );\n            })}\n          </CastList>\n        </AllPageContainer>\n      </WindowS>\n      <FaChevronRight onClick={handleRightArrowClick} />\n    </MainContainer>\n  );\n};\n\nReviews.prototype = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      author: PropTypes.string,\n      text: PropTypes.string,\n      details: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string,\n          avatar_path: PropTypes.string,\n        })\n      ),\n    })\n  ).isRequired,\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/fetchMovieReviews';\nimport Reviews from 'components/Reviews/Reviews';\nimport { NotificationsReviews } from 'components/Notifications/Notifications';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(({ results }) => {\n      const reviewsArr = [];\n\n      results.map(({ id, author, content, author_details }) => {\n        const review = {\n          id,\n          author,\n          text: content,\n          details: author_details,\n        };\n        return reviewsArr.push(review);\n      });\n\n      setReviews(reviewsArr);\n    });\n  }, [movieId]);\n\n  return reviews && reviews.length > 0 ? (\n    <Reviews reviews={reviews} />\n  ) : (\n    <NotificationsReviews />\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["NoticeContainer","styled","NoticeText","TitleStyle","NotificationsReviews","NotificationsCast","TitleHome","KEY","movieId","axios","params","api_key","response","fetchMovieReviews","data","MainContainer","WindowS","AllPageContainer","CastList","CastItem","AvatarContainer","Poster","TitleName","Text","Reviews","reviews","useState","pages","setPages","offset","setOffset","location","useLocation","console","log","useEffect","map","review","cloneElement","onClick","currentOffset","newOffset","Math","min","style","transform","id","author","text","details","avatar_path","username","src","noAvatar","alt","width","maxOffset","length","max","prototype","movies","PropTypes","name","isRequired","setReviews","useParams","then","results","reviewsArr","content","author_details","push","Notifications"],"sourceRoot":""}